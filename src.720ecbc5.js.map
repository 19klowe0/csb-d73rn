{"version":3,"sources":["src/paddle.js","src/input.js","src/collisionDetection.js","src/ball.js","src/brick.js","src/levels.js","src/game.js","src/index.js"],"names":["Paddle","game","gameWidth","gameHeight","width","height","maxSpeed","speed","position","x","y","ctx","fillStyle","fillRect","deltaTime","InputHandler","paddle","document","addEventListener","event","keyCode","moveLeft","moveRight","togglePause","start","stop","detectCollision","ball","gameObject","bottomOfBall","size","topOfBall","topOfGameObject","bottomOfGameObject","leftSideOfGameObject","rightSideOfGameObject","Ball","image","getElementById","reset","drawImage","lives","Brick","markedForDeletion","buildLevel","level","bricks","forEach","row","rowIndex","brick","brickIndex","push","level1","level2","GAMESTATE","PAUSED","RUNNING","MENU","GAMEOVER","NEWLEVEL","Game","gameStates","gameObjects","levels","currentLevel","length","Object","update","filter","draw","font","textAlign","fillText","rect","fill","canvas","getContext","GAME_WIDTH","GAME_HEIGHT","clearRect","lastTime","gameLoop","timestamp","requestAnimationFrame"],"mappings":"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","file":"src.720ecbc5.js","sourceRoot":"..","sourcesContent":["export default class Paddle {\r\n  constructor(game) {\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n    this.width = 150;\r\n    this.height = 20;\r\n\r\n    this.maxSpeed = 7;\r\n    this.speed = 0;\r\n\r\n    this.position = {\r\n      x: game.gameWidth / 2 - this.width / 2,\r\n      y: game.gameHeight - this.height - 10\r\n    };\r\n  }\r\n\r\n  moveLeft() {\r\n    this.speed = -this.maxSpeed;\r\n  }\r\n  moveRight() {\r\n    this.speed = this.maxSpeed;\r\n  }\r\n  stop() {\r\n    this.speed = 0;\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.fillStyle = \"pink\";\r\n    ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\r\n  }\r\n\r\n  update(deltaTime) {\r\n    this.position.x += this.speed;\r\n\r\n    if (this.position.x < 0) {\r\n      this.position.x = 0;\r\n    }\r\n    if (this.position.x + this.width > this.gameWidth) {\r\n      this.position.x = this.gameWidth - this.width;\r\n    }\r\n  }\r\n}\r\n","export default class InputHandler {\r\n  constructor(paddle, game) {\r\n    document.addEventListener(\"keydown\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          //move paddle to the left\r\n          paddle.moveLeft();\r\n          break;\r\n        case 39:\r\n          paddle.moveRight();\r\n          break;\r\n        case 27:\r\n          game.togglePause();\r\n          break;\r\n        case 32:\r\n          game.start();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", (event) => {\r\n      switch (event.keyCode) {\r\n        case 37:\r\n          if (paddle.speed < 0) paddle.stop();\r\n          break;\r\n        case 39:\r\n          if (paddle.speed > 0) paddle.stop();\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n","export function detectCollision(ball, gameObject) {\r\n  let bottomOfBall = ball.position.y + ball.size;\r\n  let topOfBall = ball.position.y;\r\n\r\n  let topOfGameObject = gameObject.position.y;\r\n  let bottomOfGameObject = gameObject.position.y + gameObject.height;\r\n\r\n  let leftSideOfGameObject = gameObject.position.x;\r\n  let rightSideOfGameObject = gameObject.position.x + gameObject.width;\r\n\r\n  if (\r\n    bottomOfBall >= topOfGameObject &&\r\n    topOfBall <= bottomOfGameObject &&\r\n    ball.position.x >= leftSideOfGameObject &&\r\n    ball.position.x + ball.size <= rightSideOfGameObject\r\n  ) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","import { detectCollision } from \"./collisionDetection\";\r\nexport default class Ball {\r\n  constructor(game) {\r\n    this.image = document.getElementById(\"img_ball\");\r\n\r\n    this.gameWidth = game.gameWidth;\r\n    this.gameHeight = game.gameHeight;\r\n\r\n    this.game = game;\r\n    this.size = 35;\r\n    this.reset();\r\n  }\r\n  reset() {\r\n    this.position = { x: 10, y: 400 };\r\n    this.speed = { x: 5, y: -6 };\r\n  }\r\n\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.size,\r\n      this.size\r\n    );\r\n  }\r\n  update(deltaTime) {\r\n    this.position.x += this.speed.x;\r\n    this.position.y += this.speed.y;\r\n    //wall on left or right\r\n    if (this.position.x + this.size > this.gameWidth || this.position.x < 0) {\r\n      this.speed.x = -this.speed.x;\r\n    }\r\n    //wall top and bottom collision\r\n    if (this.position.y < 0) {\r\n      this.speed.y = -this.speed.y;\r\n    }\r\n\r\n    //bottom of the game\r\n    if (this.position.y + this.size > this.gameHeight) {\r\n      this.game.lives--;\r\n      this.reset();\r\n    }\r\n\r\n    //collision with paddle\r\n    if (detectCollision(this, this.game.paddle)) {\r\n      this.speed.y = -this.speed.y;\r\n      this.position.y = this.game.paddle.position.y - this.size;\r\n    }\r\n  }\r\n}\r\n","import { detectCollision } from \"./collisionDetection\";\r\nexport default class Brick {\r\n  constructor(game, position) {\r\n    this.image = document.getElementById(\"img_brick\");\r\n\r\n    this.game = game;\r\n\r\n    this.position = position;\r\n    this.width = 80;\r\n    this.height = 24;\r\n\r\n    this.markedForDeletion = false;\r\n  }\r\n  update() {\r\n    if (detectCollision(this.game.ball, this)) {\r\n      this.game.ball.speed.y = -this.game.ball.speed.y;\r\n      this.markedForDeletion = true;\r\n    }\r\n  }\r\n  draw(ctx) {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.position.x,\r\n      this.position.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n","import Brick from \"/src/brick\";\r\n\r\nexport function buildLevel(game, level) {\r\n  //create bricks from arrays\r\n  let bricks = [];\r\n\r\n  level.forEach((row, rowIndex) => {\r\n    row.forEach((brick, brickIndex) => {\r\n      if (brick === 1) {\r\n        //can be added\r\n        let position = {\r\n          x: 80 * brickIndex,\r\n          y: 75 + 24 * rowIndex\r\n        };\r\n        bricks.push(new Brick(game, position));\r\n      }\r\n    });\r\n  });\r\n\r\n  return bricks;\r\n}\r\n\r\nexport const level1 = [\r\n  //[0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\r\n  //[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  //[1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  //[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n  [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]\r\n];\r\nexport const level2 = [\r\n  [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n];\r\n","import Paddle from \"/src/paddle\";\r\nimport InputHandler from \"/src/input\";\r\nimport Ball from \"/src/ball\";\r\nimport { buildLevel, level1, level2 } from \"/src/levels\";\r\n\r\nconst GAMESTATE = {\r\n  PAUSED: 0,\r\n  RUNNING: 1,\r\n  MENU: 2,\r\n  GAMEOVER: 3,\r\n  NEWLEVEL: 4\r\n};\r\nexport default class Game {\r\n  constructor(gameWidth, gameHeight) {\r\n    this.gameWidth = gameWidth;\r\n    this.gameHeight = gameHeight;\r\n    this.gameStates = GAMESTATE.MENU;\r\n    this.paddle = new Paddle(this);\r\n    this.ball = new Ball(this);\r\n    this.gameObjects = [];\r\n    this.bricks = [];\r\n    this.lives = 3;\r\n    new InputHandler(this.paddle, this);\r\n\r\n    //level information\r\n    this.levels = [level1, level2];\r\n    this.currentLevel = 0;\r\n  }\r\n\r\n  start() {\r\n    if (\r\n      this.gameStates !== GAMESTATE.MENU &&\r\n      this.gameStates !== GAMESTATE.NEWLEVEL\r\n    )\r\n      return;\r\n\r\n    this.bricks = buildLevel(this, this.levels[this.currentLevel]);\r\n    this.ball.reset();\r\n    this.gameObjects = [this.ball, this.paddle];\r\n\r\n    this.gameStates = GAMESTATE.RUNNING;\r\n  }\r\n\r\n  update(deltaTime) {\r\n    if (this.lives === 0) {\r\n      this.gameStates = GAMESTATE.GAMEOVER;\r\n    }\r\n    if (\r\n      this.gameStates === GAMESTATE.PAUSED ||\r\n      this.gameStates === GAMESTATE.MENU ||\r\n      this.gameStates === GAMESTATE.GAMEOVER\r\n    )\r\n      return;\r\n\r\n    //new levels\r\n    if (this.bricks.length === 0) {\r\n      this.currentLevel++;\r\n      this.gameStates = GAMESTATE.NEWLEVEL;\r\n      this.start();\r\n    }\r\n    [...this.gameObjects, ...this.bricks].forEach((Object) =>\r\n      Object.update(deltaTime)\r\n    );\r\n\r\n    this.bricks = this.bricks.filter((brick) => !brick.markedForDeletion);\r\n  }\r\n\r\n  draw(ctx) {\r\n    [...this.gameObjects, ...this.bricks].forEach((Object) => Object.draw(ctx));\r\n\r\n    //writing lives on screen\r\n    ctx.font = \"30px Arial\";\r\n    ctx.fillStyle = \"purple\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillText(\r\n      \"Lives: \" + this.lives,\r\n      this.gameWidth / 2,\r\n      this.gameHeight - 16\r\n    );\r\n\r\n    //level\r\n    ctx.font = \"30px Arial\";\r\n    ctx.fillStyle = \"purple\";\r\n    ctx.textAlign = \"center\";\r\n    ctx.fillText(\r\n      \"Level: \" + (this.currentLevel + 1),\r\n      this.gameWidth - 100,\r\n      this.gameHeight - 16\r\n    );\r\n\r\n    //shade the screen when paused\r\n    if (this.gameStates === GAMESTATE.PAUSED) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      ctx.fillStyle = \"rgba(0,0,0, 0.5)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Arial\";\r\n      ctx.fillStyle = \"purple\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"Paused\", this.gameWidth / 2, this.gameHeight / 2);\r\n    }\r\n\r\n    if (this.gameStates === GAMESTATE.MENU) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      ctx.fillStyle = \"rgba(0,0,0, 1)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Arial\";\r\n      ctx.fillStyle = \"purple\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\r\n        \"Push Space to Begin!\",\r\n        this.gameWidth / 2,\r\n        this.gameHeight / 2\r\n      );\r\n    }\r\n\r\n    if (this.gameStates === GAMESTATE.GAMEOVER) {\r\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\r\n      ctx.fillStyle = \"rgba(0,0,0, 1)\";\r\n      ctx.fill();\r\n\r\n      ctx.font = \"30px Arial\";\r\n      ctx.fillStyle = \"red\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.fillText(\"GAMEOVER LOSER\", this.gameWidth / 2, this.gameHeight / 2);\r\n    }\r\n  }\r\n\r\n  togglePause() {\r\n    //gameStates\r\n    if (this.gameStates === GAMESTATE.PAUSED) {\r\n      this.gameStates = GAMESTATE.RUNNING;\r\n    } else {\r\n      this.gameStates = GAMESTATE.PAUSED;\r\n    }\r\n  }\r\n}\r\n","import Game from \"./game\";\n\nlet canvas = document.getElementById(\"gameScreen\");\nlet ctx = canvas.getContext(\"2d\");\n\nconst GAME_WIDTH = 800;\nconst GAME_HEIGHT = 600;\n\nctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n\nlet game = new Game(GAME_WIDTH, GAME_HEIGHT);\n\nlet lastTime = 0;\n\nfunction gameLoop(timestamp) {\n  let deltaTime = timestamp - lastTime;\n  lastTime = timestamp;\n\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n  game.update(deltaTime);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n"]}